[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Digital Literacy",
    "section": "",
    "text": "Vorwort",
    "crumbs": [
      "Vorwort"
    ]
  },
  {
    "objectID": "index.html#aufbau-des-buches",
    "href": "index.html#aufbau-des-buches",
    "title": "Digital Literacy",
    "section": "Aufbau des Buches",
    "text": "Aufbau des Buches\nDie folgende Abbildung zeigt die Kompetenzen, die in diesem Buch vermittelt werden. Die unteren drei Blöcke stehen für das Wissen, wie Informationen in digitalen Computern abgebildet werden (representation), wie sie verarbeitet werden (processing) und wie wir beides für unsere Zwecke einsetzen können, um Probleme zu lösen (programming). Diese Bereiche sind die Grundlagen der Digitalisierung und deren Beherrschung ist die Voraussetzung für eine weitergehende Auseinandersetzung mit dem Thema. Diese erfolgt im Rahmen dieses Buches mit der Betrachtung der beiden wichtigsten Anwendungsfelder der Digitalisierung aus Sicht einer digital mündigen Person. Zum einen steigen wir in die Hintergründe der Künstlichen Intelligenz (artificial intelligence) ein, eine Entwicklung, die ein nie zuvor gesehenens Transformationspotenzial besitzt. Als zweite Säule digitaler Anwendungen beschäftigen wir uns mit den Möglichkeiten der Datenanalyse (data analysis), die durch die wachsende Menge digitaler Prozesse und Daten jeden Tag an Relevanz gewinnt.",
    "crumbs": [
      "Vorwort"
    ]
  },
  {
    "objectID": "index.html#material",
    "href": "index.html#material",
    "title": "Digital Literacy",
    "section": "Material",
    "text": "Material\nDie Abbildungen aus diesem Buch entstammen den zugehörigen Vorlesungsfolien und sind hier zu finden:\n\nGoogle Slides\nPDF",
    "crumbs": [
      "Vorwort"
    ]
  },
  {
    "objectID": "index.html#inspiration-für-dieses-buch",
    "href": "index.html#inspiration-für-dieses-buch",
    "title": "Digital Literacy",
    "section": "Inspiration für dieses Buch",
    "text": "Inspiration für dieses Buch\nIn dieses Buch sind viele Ideen aus den CS50-Kursen von David J. Malan und seinem fantastischen Team eingeflossen. Ich kann die Kurse sehr empfehlen und euch speziell als Ergänzung zu diesem Buch die folgenden ans Herz legen:\n\nCS50’s Introduction to Programming with Python (2022)\nCS50: Introduction to Computer Science (2023)\n\nBesonders im ersten Teil dieses Buchs hat mich Charles Petzold (2022) mit seinem Buch Code: The Hidden Language of Computer Hardware and Software inspiriert. Es ist ein verständlich geschriebenes und gut lesbares Buch, das mittlerweile in der zweiten Auflage vorliegt. Ich empfehle es allen, die sich für die Grundlagen der Informatik interessieren.\n\n\n\n\nPetzold, Charles. 2022. Code: The Hidden Language of Computer Hardware and Software. 2nd ed. Hoboken: Microsoft Press.",
    "crumbs": [
      "Vorwort"
    ]
  },
  {
    "objectID": "chapters/representation/problems.html",
    "href": "chapters/representation/problems.html",
    "title": "1  Probleme",
    "section": "",
    "text": "1.1 Ein Modell für die Problemlösung\nAls ehemaliger Berater wurde mir beigebracht, den Begriff “Problem” zu vermeiden, weil er negativ konnotiert ist. Stattdessen sollte man von Herausforderungen sprechen, was den positiven Aspekt hervorhebt. In diesem Kapitel ist der Begriff “Problem” abstrakter gemeint. Es geht um das Bewältigen einer Aufgabe, die komplex, wie das Durchsuchen von mehreren Milliarden Datensätzen, oder einfach, wie das Addieren von 1 und 1, sein kann.\nEgal, wie komplex das Problem ist, wir können seine Lösung mithilfe eines digitalen Computers auf ein einfaches Modell reduzieren. Dieses Modell werden wir im Laufe des Buches an verschiedenen Stellen wiedersehen. Das Modell in Abbildung 1.1 hat drei Bestandteile:\nNehmen wir das Beispiel der Addition zweier ganzer Zahlen \\(a\\) und \\(b\\). Die Eingabe besteht für dieses einfache Problem aus konkreten Werten für \\(a\\) und \\(b\\). Die Lösung für das Problem bekommen wir, wenn wir den Additionsoperator \\(+\\) auf die beiden Zahlen aus der Eingabe anwenden. Als Ergebnis bekommen wir die sogenannte Summe, die wir mit \\(s\\) abkürzen. Also: \\(a + b = s\\)",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Probleme</span>"
    ]
  },
  {
    "objectID": "chapters/representation/problems.html#ein-modell-für-die-problemlösung",
    "href": "chapters/representation/problems.html#ein-modell-für-die-problemlösung",
    "title": "1  Probleme",
    "section": "",
    "text": "Die Eingabe ist das, was wir zur genaueren Beschreibung des Problems wissen müssen. Das können etwa die zwei Zahlen sein, die miteinander addiert werden sollen. Oder sind die Milliarden Datensätze zusammen mit der Information, wonach wir suchen.\nDie Beschreibung der notwendigen Schritte, um das Problem auf Basis der Eingabe zu lösen. Später werden wir hierfür den Begriff Algorithmus einführen.\nDie Ausgabe ist Repräsentation der Lösung des Problems. Das kann eine Zahl sein, wie das Ergebnis der Addition zweier Zahlen. Es kann auch ein Datensatz sein, der aus mehreren Milliarden als der Gesuchte erkannt wurde.\n\n\n\n\n\n\n\nAbbildung 1.1: Ein Modell für das Lösen von Problemen.\n\n\n\n\n\n\n\nAddition als Beispiel für das Lösen eines Problems.",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Probleme</span>"
    ]
  },
  {
    "objectID": "chapters/representation/problems.html#problemlösung-als-informationsverarbeitung",
    "href": "chapters/representation/problems.html#problemlösung-als-informationsverarbeitung",
    "title": "1  Probleme",
    "section": "1.2 Problemlösung als Informationsverarbeitung",
    "text": "1.2 Problemlösung als Informationsverarbeitung\nModelle sind wie vereinfachte Landkarten für komplexe Themen. Stellt euch vor, ihr nehmt einen komplizierten Sachverhalt und entfernt alles, was für euer Ziel nicht wichtig ist. Am Ende bleibt ein Modell übrig, das nur die Kernpunkte beinhaltet. Nehmen wir als Beispiel ein Modell, das erklärt, wie die Informationsverarbeitung in unseren digitalen Computern funktioniert. Hier konzentrieren wir uns auf drei Schlüsselelemente.\nErstens gibt es die Eingabe. Das ist das, was ihr dem Computer sagt oder gebt, also eure Fragen, Informationen oder Befehle. Dann kommt das Programm selbst, das wir zuerst als Blackbox betrachten – also als etwas Geheimnisvolles, dessen Inneres wir bis jetzt nicht kennen. Später werden wir dieses Unbekannte durch unterschiedliche Anwendungen ersetzen. Und schließlich haben wir die Ausgabe, also das, was der Computer nach der Verarbeitung eurer Eingabe zurückgibt.\n\n\n\n\n\n\nAbbildung 1.2: Ein Modell für die Informationsverarbeitung digitaler Computer.",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Probleme</span>"
    ]
  },
  {
    "objectID": "chapters/representation/problems.html#übungen",
    "href": "chapters/representation/problems.html#übungen",
    "title": "1  Probleme",
    "section": "Übungen",
    "text": "Übungen\n\nFormuliert drei weitere Probleme mithilfe des vorgestellten Modells für die Problemlösung mittels digitaler Computer. Nennt jeweils die Eingabe, Lösung und die Ausgabe des Problems!\n\n\n\n\nAbbildung 1.1: Ein Modell für das Lösen von Problemen.\nAddition als Beispiel für das Lösen eines Problems.\nAbbildung 1.2: Ein Modell für die Informationsverarbeitung digitaler Computer.",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Probleme</span>"
    ]
  },
  {
    "objectID": "chapters/representation/information.html",
    "href": "chapters/representation/information.html",
    "title": "2  Information",
    "section": "",
    "text": "2.1 Schach\n“Wir befinden uns in einer Zeit vor der Erfindung von digitalen Technologien wie dem Smartphone, Tablets oder dem PC. Max und Ida sind zwei Kinder im Alter von 9 Jahren und beste Freunde. Max wohnt in einem Haus in einem kleinen Dorf auf dem Land. Seine Freundin Ida wohnt ebenfalls in einem Haus, das gute 200 Meter von Max’ Haus entfernt liegt. Zwischen ihren Häusern befindet sich ein Acker.\nMax und Ida spielen leidenschaftlich gerne Schach gegeneinander. Sie verbringen tagsüber jede freie Minute damit, wenn sie nicht gerade von den Eltern nach draußen kommandiert werden. Da due Zeit am Tag oft zu knapp ist und Schachpartien eine Weile dauern können, wollen Max und Ida ihre Spiele am Abend fortsetzen, wenn es nichts anderes zu tun gibt und es dazu im Haus schön ruhig geworden ist.\nLeider dürfen Max und Ida dürfen während der Schulzeit spät Abends nicht mehr miteinander telefonieren. Schließlich ist Schlaf wichtig, um in Schule aufmerksam zu sein. Dazu war telefonieren früher teuer, weil jede Minute einzeln abgerechnet wurde. Handy und Tablets gab es noch nicht und Kinder, und selbst wenn, wäre das für Kinder in ihrem Alter noch zu früh. So einfach wolIen die beiden aber nicht aufgeben und suchen trotz der widrigen Umstände nach einer Möglichkeit, ihr Schachspiel am Abend fortzusetzen.\nGlücklicherweise liegen die Fenster ihrer Kinderzimmer günstig und sie haben Sichtkontakt zueinander. Das Licht in ihren Zimmern dürfen sie nicht einschalten, das bekämen die Eltern sofort mit. Aber beide haben sich zu ihrem letzten Geburtstag eine Taschenlampe gewünscht…“\nHier endet die kurze Geschichte von Max und Ida und ihrer Leideschaft für das Schachspiel. Wir wollen den Ball aufnehmen und uns ihrem Problem annehmen: Wie können beide nur mit einer Taschenlampe ihren nächsten Schachzug dem Gegenüber mitteilen?\nUm Informationen zu übermitteln, sollten wir uns zunächst darüber im Klaren sein, wie die Information genau aussieht. Wie können wir möglichst effizient den Zug einer beliebigen Schachfigur als Information ausdrücken, um diesen dann an unseren Gegenspieler zu schicken?\nWer schon einmal Schach gespielt hat weiß, dass ein Schachbrett aus \\(8 \\times 8 = 64\\) Feldern besteht, die sich in den Farben Schwarz und Weiß abwechseln. Um jedes der 64 Felder genau benennen zu können, nummerieren wir die horizontale Achse mit Buchstaben und die vertikale Achse mit Zahlen durch. Auf diese Weise kann jedes Feld durch eine Kombination aus Buchstabe und Zahl genau benannt werden. In der Abbildung 2.1 steht der weiße König somit auf dem Feld mit der Bezeichnung d1. Wir sprechen auch von der Koordinate eines Feldes. Der schwarze König steht entsprechend auf f8.\nEin Schachzug kann mithilfe der Koordinate des Feldes, auf dem die zu ziehende Figur vor dem Zug steht, und der Koordinate des Feldes, auf dem sie nach dem Zug stehen wird, genau angegeben werden. Im Beispiel aus Abbildung 2.2 soll der Bauer auf c2 zwei Felder nach vorne auf c4 bewegt werden. Wir schreiben dafür c2 → c4 oder einfach nur c2c4. Wenn von Beginn des Spiels an alle Züge korrekt notiert werden, beginnendend mit Weiß, dann kann mithilfe eines Protokolls in diesem Format der Zustand des Schachspiels nach jedem Zug eindeutig ermittelt werden.\nWir haben jetzt eine Idee, wie die Information aussieht, die wir oder Max und Ida mithilfe ihrer Taschenlampen einander mitteilen wollen. Aber wie genau kann das funktionieren?",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Information</span>"
    ]
  },
  {
    "objectID": "chapters/representation/information.html#schach",
    "href": "chapters/representation/information.html#schach",
    "title": "2  Information",
    "section": "",
    "text": "Abbildung 2.1\n\n\n\n\n\n\n\n\n\n\nAbbildung 2.2",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Information</span>"
    ]
  },
  {
    "objectID": "chapters/representation/information.html#information-entsteht-durch-variation",
    "href": "chapters/representation/information.html#information-entsteht-durch-variation",
    "title": "2  Information",
    "section": "2.2 Information entsteht durch Variation",
    "text": "2.2 Information entsteht durch Variation\nInformationen können nur existieren, wenn wir die Möglichkeit haben, unterschiedliche Symbole in einer Abfolge mit festgelegter Länge von Symbolen zu verwenden. Das klingt vielleicht abstrakt, wird aber schnell deutlicher, wenn wir uns ein Beispiel anschauen.\nStellen wir uns vor, wir hätten nur einen Buchstaben im Alphabet, etwa das A. Und das A existiert auch nur in dieser groß geschriebenen Form; es gibt kein kleines a. Gleichzeitig sei festgelegt, dass unsere Nachrichten immer genau zwei Symbole lang sein müssen. Können wir mit dieser Konstellation aus Nachrichtenlänge und Anzahl Symbolen überhaupt Informationen übermitteln? Die Antwort lautet Nein, und die Begründung ist einfach: Wir sind auf diese eine Nachricht festgelegt: AA - zwei Mal das große A. Egal was wir tun, mit den gegebenen Umständen lautet unsere Nachricht immer AA. Dadurch ist unsere Nachricht wertlos, oder anders gesagt, sie enthält keine Information.\nInformation kann nur durch Variation von Symbolen innerhalb einer Nachricht mit fester Länge entstehen. Wir erkennen das sofort, wenn wir zu unserem A ein weiteres Symbol hinzufügen, das B. Welche Nachrichten können wir jetzt abbilden, weiterhin unter der Annahme, dass unsere Nachricht die feste Länge 2 hat?\n\nAA\nAB\nBA\nBB\n\nWir haben durch die Hinzunahme eines weiteren Symbols nun die Möglichkeit, vier unterschiedliche Nachrichten abzubilden.\nDie allgemeine Formel für die Anzahl möglicher Nachrichten können wir wie folgt benennen:\n\\[\nN = R^n\n\\]\nwobei \\(R\\) für die Anzahl verfügbarer Symbole steht und \\(n\\) durch die festgelegte Länge der Nachricht bestimmt ist.",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Information</span>"
    ]
  },
  {
    "objectID": "chapters/representation/information.html#morse-code",
    "href": "chapters/representation/information.html#morse-code",
    "title": "2  Information",
    "section": "2.3 Morse Code",
    "text": "2.3 Morse Code\nHier können Interessierte sich das gesamte Alphabet als Morse Code in Audioform anhören\n\n\n\nAbbildung 2.1: \nAbbildung 2.2:",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Information</span>"
    ]
  },
  {
    "objectID": "chapters/representation/codes.html",
    "href": "chapters/representation/codes.html",
    "title": "5  Codes",
    "section": "",
    "text": "Abbildung 5.1: Ein Herz als Pixelmatrix.\n\n\n\n\n\n\nAbbildung 5.1: Ein Herz als Pixelmatrix.",
    "crumbs": [
      "Repräsentation",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Codes</span>"
    ]
  },
  {
    "objectID": "chapters/processing/algorithms.html",
    "href": "chapters/processing/algorithms.html",
    "title": "6  Algorithmen",
    "section": "",
    "text": "Das folgende Video empfehle ich als Ergänzung zu diesem Kapitel:\nCS50x 2023 - Lecture 3 - Algorithms",
    "crumbs": [
      "Verarbeitung",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Algorithmen</span>"
    ]
  },
  {
    "objectID": "chapters/processing/arithmetic.html",
    "href": "chapters/processing/arithmetic.html",
    "title": "8  Arithmetik",
    "section": "",
    "text": "8.1 Binäre Addition",
    "crumbs": [
      "Verarbeitung",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Arithmetik</span>"
    ]
  },
  {
    "objectID": "chapters/processing/arithmetic.html#zum-weiterlesen",
    "href": "chapters/processing/arithmetic.html#zum-weiterlesen",
    "title": "8  Arithmetik",
    "section": "8.2 Zum Weiterlesen",
    "text": "8.2 Zum Weiterlesen\nFür ein tieferes Verständnis der binären Addition mit Logikgattern empfehle ich das Kapitel 14 “Adding with Logic Gates” aus Petzold (2022).\n\n\n\n\nPetzold, Charles. 2022. Code: The Hidden Language of Computer Hardware and Software. 2nd ed. Hoboken: Microsoft Press.",
    "crumbs": [
      "Verarbeitung",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Arithmetik</span>"
    ]
  },
  {
    "objectID": "chapters/programming/variables.html",
    "href": "chapters/programming/variables.html",
    "title": "10  Variablen",
    "section": "",
    "text": "# Dies ist eine neue Variable mit dem Namen \"x\"\nx = 1",
    "crumbs": [
      "Programmieren",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Variablen</span>"
    ]
  },
  {
    "objectID": "chapters/programming/control_structures.html",
    "href": "chapters/programming/control_structures.html",
    "title": "11  Kontrollstrukturen",
    "section": "",
    "text": "# Eine If-Anweisung in Pyhton\nif True:\n  ...\nelse:\n  ...",
    "crumbs": [
      "Programmieren",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Kontrollstrukturen</span>"
    ]
  },
  {
    "objectID": "parts/part_4_daten.html",
    "href": "parts/part_4_daten.html",
    "title": "Daten",
    "section": "",
    "text": "Dieser letzte Teil des Buches widmet sich der Data Literacy als ein wichtiger Bestandteil von Digital Literacy. Als Standardwerk zum Nachlesen empfehle ich Wickham, Çetinkaya-Rundel, and Grolemund (2023).\n\n\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023. R for data science: import, tidy, transform, visualize, and model data. 2nd edition. Sebastopol, CA: O’Reilly Media, Inc.",
    "crumbs": [
      "Daten"
    ]
  },
  {
    "objectID": "chapters/data/data_analysis_with_r.html",
    "href": "chapters/data/data_analysis_with_r.html",
    "title": "16  Datenanalyse mit R",
    "section": "",
    "text": "16.1 Warum R?",
    "crumbs": [
      "Daten",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Datenanalyse mit R</span>"
    ]
  },
  {
    "objectID": "chapters/data/data_analysis_with_r.html#warum-r",
    "href": "chapters/data/data_analysis_with_r.html#warum-r",
    "title": "16  Datenanalyse mit R",
    "section": "",
    "text": "R oder Python?\nDiese Frage kann ich nicht eindeutig pro R beantworten. Es gibt gute Gründe, beide Sprachen für die Datenanalyse zu verwenden.\n\nBeide Sprachen sind frei verfügbar und Open Source.\nBeide Sprachen haben in der Praxis eine hohe Verbreitung und damit eine große Community, die sich um die Entwicklung und Pflege der Sprachen und der Pakete kümmert.\n\nDie beiden wichtigsten Gründe, warum ich R bevorzuge, sind:\n\nR ist eine Sprache, die speziell für den Zweck der statistischen Datenanalyse entwickelt und verwendet wird. Python dagegen ist eine allgemeine Programmiersprache, deren größte Stärke in ihrer Vielseitigkeit liegt.\nR und das Tidyverse, ein Metapaket für R, das eine Vielzahl von Paketen für die Datenanalyse zusammenfasst, sind in der Wissenschaft und in der Wirtschaft speziell für die Datenvisualisierung weit verbreitet. Mit gutem Grund: Aus meiner persönlichen Erfahrung mit Python und R heraus kann ich sagen, dass der Arbeitsfluss mit R und dem Tidyverse intuitiver ist und die unterschiedlichen Pakete für das Laden von Daten, die Datentransformation und die Visualisierung von Daten problemlos miteinander verwendet werden können.\n\n\n\nR oder SPSS?\nFür diese Frage empfehle ich euch das Video 16.1.\n\n\n\n\n\n\nVideo 16.1: “Why you should abandon SPSS for R”\n\n\n\n\n\nR oder Excel?\nDie Antwort auf diese Frage folgt der gleichen Argumentation wie der Frage, warum eine digitale Ausbildung mehr als nur die gekonnte und kritische Anwendung von Werkzeugen ausmachen sollte. Kurz gesagt: Wir wollen von Werkzeugnutzern zu Werkzeugbauern werden.",
    "crumbs": [
      "Daten",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Datenanalyse mit R</span>"
    ]
  },
  {
    "objectID": "chapters/data/vectors.html",
    "href": "chapters/data/vectors.html",
    "title": "17  Vektoren",
    "section": "",
    "text": "Ein Vektor ist eine Liste mit Elementen gleichen Typs.",
    "crumbs": [
      "Daten",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Vektoren</span>"
    ]
  },
  {
    "objectID": "chapters/data/data_frames.html",
    "href": "chapters/data/data_frames.html",
    "title": "18  Data Frames",
    "section": "",
    "text": "18.1 Tabellen",
    "crumbs": [
      "Daten",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Data Frames</span>"
    ]
  },
  {
    "objectID": "chapters/data/data_frames.html#tibbles",
    "href": "chapters/data/data_frames.html#tibbles",
    "title": "18  Data Frames",
    "section": "18.2 Tibbles",
    "text": "18.2 Tibbles",
    "crumbs": [
      "Daten",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Data Frames</span>"
    ]
  },
  {
    "objectID": "chapters/references.html",
    "href": "chapters/references.html",
    "title": "Literaturverzeichnis",
    "section": "",
    "text": "Petzold, Charles. 2022. Code: The Hidden Language of Computer\nHardware and Software. 2nd ed. Hoboken: Microsoft Press.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023.\nR for data science: import, tidy, transform, visualize, and model\ndata. 2nd edition. Sebastopol, CA: O’Reilly Media, Inc.",
    "crumbs": [
      "Literaturverzeichnis"
    ]
  }
]